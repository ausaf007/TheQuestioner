/* 
 * The MIT License
 *
 * Copyright 2021 Md Ausaf Rashid.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */
package thequestioner;

import java.awt.*;
import javax.swing.text.JTextComponent;
/**
 *
 * @author Md Ausaf Rashid
 */
public class StringAnalyser extends javax.swing.JFrame {
    /**
     * Creates new form StringAnalyser
     */
    static Font f = new Font("Calibri", Font.PLAIN, 36);
    public StringAnalyser() {    
        initComponents();    
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        title_line_finder = new javax.swing.JButton();
        jTextArea3 = new javax.swing.JTextArea();
        desc_line_finder = new javax.swing.JButton();
        jTextArea2 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(917, 280));
        setUndecorated(true);
        getContentPane().setLayout(null);

        title_line_finder.setText("title");
        title_line_finder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                title_line_finderActionPerformed(evt);
            }
        });
        getContentPane().add(title_line_finder);
        title_line_finder.setBounds(790, 220, 51, 23);

        jTextArea3.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea3.setColumns(20);
        jTextArea3.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea3.setLineWrap(true);
        jTextArea3.setRows(4);
        jTextArea3.setWrapStyleWord(true);
        jTextArea3.setBorder(null);
        jTextArea3.setMaximumSize(new java.awt.Dimension(800, 70));
        jTextArea3.setMinimumSize(new java.awt.Dimension(800, 70));
        jTextArea3.setSelectedTextColor(new java.awt.Color(153, 153, 153));
        getContentPane().add(jTextArea3);
        jTextArea3.setBounds(10, 80, 800, 64);

        desc_line_finder.setText("desc");
        desc_line_finder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                desc_line_finderActionPerformed(evt);
            }
        });
        getContentPane().add(desc_line_finder);
        desc_line_finder.setBounds(670, 220, 73, 23);

        jTextArea2.setEditable(false);
        jTextArea2.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea2.setColumns(20);
        jTextArea2.setFont(new java.awt.Font("Calibri", 0, 36)); // NOI18N
        jTextArea2.setForeground(new java.awt.Color(255, 255, 255));
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(5);
        jTextArea2.setWrapStyleWord(true);
        jTextArea2.setBorder(null);
        getContentPane().add(jTextArea2);
        jTextArea2.setBounds(10, 20, 800, 44);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void title_line_finderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_title_line_finderActionPerformed
        System.out.println("Line count="+getLineCountAsSeen(jTextArea2));
        // TODO add your handling code here:
    }//GEN-LAST:event_title_line_finderActionPerformed
    private void desc_line_finderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_desc_line_finderActionPerformed
        System.out.println("Line count="+getLineCountAsSeen(jTextArea3));        // TODO add your handling code here:
    }//GEN-LAST:event_desc_line_finderActionPerformed
    public static int getLineCountAsSeen(JTextComponent txtComp) {
        Font font = txtComp.getFont();
        FontMetrics fontMetrics = txtComp.getFontMetrics(font);
        int fontHeight = fontMetrics.getHeight();
        int lineCount;
        try {
            int height = txtComp.modelToView(txtComp.getDocument().getEndPosition().getOffset() - 1).y;
            lineCount = height / fontHeight + 1;
        } catch (Exception e) { 
            lineCount = 0;
        }      
        return lineCount;
    }
    public int getNumberOfLines(String str){  
        int n;
        jTextArea2.setText(str);
        n=getLineCountAsSeen(jTextArea2);
        return n;
    }
    public int getNumberOfLinesDesc(String str){  
        int n;
        jTextArea3.setText(str);
        n=getLineCountAsSeen(jTextArea3);            
        return n;
    }
    public int getNumberOfLinesDescExact(String str){  
        int n;
        jTextArea3.setText(str);
        n=getLineCountAsSeen(jTextArea3);    
        return n;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StringAnalyser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StringAnalyser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StringAnalyser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StringAnalyser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StringAnalyser().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton desc_line_finder;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JButton title_line_finder;
    // End of variables declaration//GEN-END:variables
}
